name: publish

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      
      - name: Install dependencies (Linux only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev \
            libappindicator3-dev librsvg2-dev patchelf

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build frontend
        run: pnpm build

      - name: Tauri build and release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          projectPath: src-tauri
          args: ${{ matrix.args }}
      
      # Windows-specific setup
      - name: Set VCPKG_ROOT (Windows only)
        if: matrix.platform == 'windows-latest'
        run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Install OpenSSL via vcpkg (Windows only)
        if: matrix.platform == 'windows-latest'
        run: vcpkg install openssl:x64-windows-static-md

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry/index
          key: index-${{ runner.os }}-${{ github.run_number }}
          restore-keys: |
            index-${{ runner.os }}-

      - name: Generate Cargo.lock
        run: cargo generate-lockfile
        working-directory: src-tauri

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry/cache
          key: registry-${{ runner.os }}-${{ runner.os }}-${{ hashFiles('src-tauri/Cargo.lock') }}

      - name: Cache Cargo target
        uses: actions/cache@v4
        with:
          path: src-tauri/target
          key: target-${{ github.job }}-${{ runner.os }}-${{ hashFiles('src-tauri/Cargo.lock') }}

      - name: Run OpenSSL tests (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          cargo test -p openssl
          cargo test -p openssl-errors
        working-directory: src-tauri
